#!/usr/bin/env bash

# Set strict mode for better error handling
set -euo pipefail

# Define constants
readonly VALID_BUMP_TYPES=("major" "minor" "patch")

# Function to display usage and exit
usage() {
    echo "Error: BUMP_TYPE is required and must be one of: ${VALID_BUMP_TYPES[*]}"
    echo "Usage: BUMP_TYPE=<type> git push"
    exit 1
}

# Validate BUMP_TYPE
validate_bump_type() {
    local bump_type="$1"
    
    # Check if BUMP_TYPE is set
    if [[ -z "$bump_type" ]]; then
        usage
    fi
    
    # Check if BUMP_TYPE is valid
    local valid=false
    for type in "${VALID_BUMP_TYPES[@]}"; do
        if [[ "$bump_type" == "$type" ]]; then
            valid=true
            break
        fi
    done
    
    if [[ "$valid" == false ]]; then
        usage
    fi
}

# Main script execution
main() {
    # Skip if this is a recursive push
    if [[ "${PRE_PUSH_ACTIVE:-false}" == "true" ]]; then
        echo "Skipping pre-push hook during recursive push."
        exit 0
    fi

    # Validate bump type
    validate_bump_type "${BUMP_TYPE:-}"

    echo "Running pre-push hook with BUMP_TYPE=${BUMP_TYPE}..."

    # Run version bump script
    if ! python3 bump_version.py "$BUMP_TYPE"; then
        echo "Version bump script failed. Aborting push."
        exit 1
    fi

    # Mark hook as active and push changes
    export PRE_PUSH_ACTIVE=true
    git push --follow-tags
}

# Execute main function
main

# Ensure hook is executable (optional, typically done during setup)
chmod +x .git/hooks/pre-push